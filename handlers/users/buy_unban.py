from keyboards.inline.admin_inline import unban_user_keyboard
from keyboards.inline.payments_inline import payments_keyboard, making_payment, check_payment_keyboard
from typing import Union
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from glQiwiApi import types as qiwi_types

from loader import wallet, dp, bot, _
from utils.db_api import db_commands


async def create_payment(amount: Union[float, int] = 1) -> qiwi_types.Bill:
    async with wallet:
        return await wallet.create_p2p_bill(amount=amount)


@dp.callback_query_handler(text="unban")
async def get_payment(call: CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_text(_("<b>üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑–±–∞–Ω–∞ - 600</b>\n"
                                   "‚îú–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Ü–µ–Ω, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \n<b>‚îúüîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–Ω—ã</b>\n"
                                   "‚îú–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç Qiwi –∏–ª–∏ –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏\n‚îú–æ–ø–ª–∞—Ç–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–∏–≤–∏,"
                                   " –Ω–∞–ø–∏—à–∏—Ç–µ –∞–≥–µ–Ω—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏"),
                                 reply_markup=await payments_keyboard("unban"))


@dp.callback_query_handler(text="check_price")
async def check_price(call: CallbackQuery):
    await bot.answer_callback_query(call.id, text=_("‚úîÔ∏è –¶–µ–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞"))


@dp.callback_query_handler(text='pay_qiwi')
async def payment(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    bill = await create_payment()

    await call.message.edit_text(_(f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ <b>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</b>\n"
                                   f"–ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–∏–∂–µ"),
                                 reply_markup=await making_payment(bill))
    await state.set_state("payment")
    await state.update_data(bill=bill)


@dp.callback_query_handler(state="payment", text="check_payment")
async def successful_payment(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    async with state.proxy() as data:
        bill: qiwi_types.Bill = data.get("bill")
    status = await bill.check()
    if status:
        await call.message.edit_text(_("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!"))
        await db_commands.update_user_data(telegram_id=call.from_user.id, is_banned=False)
        await state.reset_state(with_data=False)
    else:
        await call.message.answer(_("–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç 10, –∞ –∑–∞—Ç–µ–º –µ—â–µ —Ä–∞–∑ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "
                                    "–Ω–∏–∂–µ"),
                                  reply_markup=await check_payment_keyboard())


@dp.callback_query_handler(state='payment', text='cancel_payment')
async def cancel_payment(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    await call.message.edit_text(_("–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã!"), reply_markup=await unban_user_keyboard())
    await state.reset_state()
