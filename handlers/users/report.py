from keyboards.inline.BN_report import report_inline_kb
from keyboards.inline.menu_inline import menu_inline_kb
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from states.Reports import Report
from data.config import ADMINS
from loader import dp, bot


@dp.callback_query_handler(text="send_report", state='finding')
async def report_user(call: CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.answer(
        "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã\n"
        "\n"
        "1. üîû –ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö.\n"
        "2. üíä –ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∞ –Ω–∞—Ä–∫–æ—Ç–∏–∫–æ–≤.\n"
        "3. üí∞ –ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥.\n"
        "4. ü¶® –î—Ä—É–≥–æ–µ.\n"
        "\n"
        "5. –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.", reply_markup=report_inline_kb)
    await Report.R1.set()


@dp.callback_query_handler(text="content", state=Report.R1)
@dp.callback_query_handler(text="drugs", state=Report.R1)
@dp.callback_query_handler(text="scam", state=Report.R1)
@dp.callback_query_handler(text="another", state=Report.R1)
async def report_user(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    display_name = call.from_user.full_name

    await call.answer(
        f"–†–µ–ø–æ—Ä—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.\n"
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ–¥–ø—Ä–∏–º–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ä—ã"
    )

    for admin_id in ADMINS:
        await bot.send_message(
            admin_id,
            f"–ö–∏–Ω—É—Ç —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "
        )
    async with state.proxy() as data:
        data["report_us"] = display_name


@dp.callback_query_handler(text="cancel_report", state=Report.R1)
async def cancel_report(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    await call.message.delete()
    await call.message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é", reply_markup=menu_inline_kb)
    await state.finish()
