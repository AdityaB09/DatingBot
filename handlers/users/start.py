from aiogram.dispatcher.filters.builtin import CommandStart
from asyncpg import UniqueViolationError

from keyboards.inline.inline_start_menu import inline_start
from aiogram.types import CallbackQuery
from loader import dp, db, _
from aiogram import types


@dp.message_handler(CommandStart())
async def register_user(message: types.Message):
    try:
        await db.add_user_Users(full_name=message.from_user.full_name,
                                telegram_id=message.from_user.id,
                                username=message.from_user.username)
    except UniqueViolationError:
        user = await db.select_user(telegram_id=message.from_user.id)
        if user.get('is_banned') is not True:
            count_users = await db.count_users()
            await message.reply(text=_(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, {message.from_user.full_name}!!\n"
                                       f"–°–µ–π—á–∞—Å –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ <b>{count_users}</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
                                       f"–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ - –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help\n\n"),
                                reply_markup=inline_start)
        elif user.get('is_banned') is True:
            await message.answer(f'–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞–≤—Å–µ–≥–¥–∞! –ó–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π –ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω—É')


@dp.callback_query_handler(text_contains="lang")
async def change_language(call: CallbackQuery):
    await call.message.edit_reply_markup()
    lang = call.data[-2:]

    await call.message.answer(_("–í–∞—à —è–∑—ã–∫ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω", locale=lang))


@dp.callback_query_handler(text_contains="info")
async def information(call: CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_text("<b>Made by: </b>\n"
                                 "\n"
                                 "@DRomanovizc - Python Developer\n"
                                 "@mroshalom - Python Developer\n"
                                 "\n"
                                 "–ü–û–õ–¨–ó–£–Ø–°–¨ –ë–û–¢–û–ú –í–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –°–û–ì–õ–ê–®–ê–ï–¢–ï–°–¨ –ù–ê –û–ë–†–ê–ë–û–¢–ö–£ –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–•\n"
                                 "<i>Dslango¬© 2021</i>",
                                 reply_markup=inline_start)


@dp.callback_query_handler(text_contains="instruction")
async def get_inst(call: CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_text(f"<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: </b>\n\n"
                                 f"<b>1. –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∞–Ω–∫–µ—Ç–∞–º\n\n</b>"
                                 f"üëç - <i>–≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∞–Ω–∫–µ—Ç–∞ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>\n"
                                 f"üëé - <i>–≤–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∞–Ω–∫–µ—Ç–∞</i>\n"
                                 f"üíå - <i>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</i>\n"
                                 f"üõë - <i>–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∞–Ω–∫–µ—Ç—É/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>\n\n"
                                 f"–ï—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –±–∞–≥, —Ç–æ –º–æ–∂–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å –Ω–∞–º, –Ω–∞–ø–∏—Å–∞–≤ —Å—é–¥–∞\n - @DRomanovizc –∏–ª–∏ "
                                 f"@mroshalom",
                                 reply_markup=inline_start)
